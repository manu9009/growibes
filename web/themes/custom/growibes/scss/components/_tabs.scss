



  


.tabs {
    display: none;
    margin-bottom:-1px;

    @include lg{
        display: block;
    }

    ul {
      margin: 0;
      padding: 0;
      font-weight: bold;
      overflow: hidden;
     

      li {
        width: 25%;
        overflow: hidden;

        &:first-child{
            border-radius: 4px 0px 0 0;
        }

        &:last-child{
            border-radius: 0px 4px 0 0;

            a{
                border-right:0px;
            }
        }
        

        a {
            color: $white;
            background: $purple;
            width: 100%;
            padding: .8em 0;
            border-top:4px solid $purple;
            border-right: dashed 1px rgba($white, .4);
            display: block;
            cursor: pointer;
            transition: all ease .5s;

            &:hover{
                background: $turquoise;
            }

            &.active{
                background: $light;
            }

            &.active, &:hover{
               
                text-decoration: none;
                color: $purple;
                
            }

            div{
                display: block;
                margin:0 auto;
                padding-left: 2em;

                span{
                    font-weight: normal;
                    line-height: 1;
                    font-size: .9em;
                }
                
            }
          

        }
      } 
    }
}

  


.tabbed-content {
   

    .item {
        min-height: 2em; // We need a minimum height for each item or else the accordion buttons would dissapear
        margin-bottom: 10px;
        position: relative;
        border-radius: 4px;
        overflow: hidden;
        position: relative;
        border-top: 1px solid $silver;
        

        @include lg{
            display: none;
        }

        .section-title{
            display: none;

            @include lg{
                display: block;
            }
        }

        &::before {
            content: attr(data-title); // Instead of polluting the HTML with a duplicate set of tabs, we get the accordion using the data-title attribute.
            display: block;
            cursor: pointer;
            font-weight: bold;
            padding: 1em;
            background: $purple;
            color: $white;
            font-size: 1em;

            @include lg{
                display: none;
            }
        }

        &::after{
            content:"";
            display: block;
            position: absolute;
            top:20px;
            right:15px;
            width: 15px;
            height: 15px;
            font-weight: normal;
            color: #fff;
            pointer-events: none;
             background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 18 9'%3E%3Cpath d='M9.1 9c.2 0 .4-.1.6-.3l8-7c.4-.4.4-1 .1-1.4-.4-.4-1-.4-1.4-.1L9 6.7 1.7.2C1.3-.2.7-.1.3.3c-.4.4-.3 1 .1 1.4l8 7c.1.2.4.3.7.3z' fill='%23FFFFFF'/%3E%3C/svg%3E");
             background-repeat: no-repeat;
             background-size: 100%;
             background-position: center;
            
        }

        .item-content { // We hide the inactive content with zero opacity instead of "display:none" because this allows us to apply transition effects if we want. 
            opacity: 0;
            visibility: hidden;
            height: 0;
        }

        &.active {
            display: block;

            &::after{
                transform: scaleY(-1);
            }

            .item-content {
                opacity: 1;
                visibility: visible;
                height:auto;
                padding: 1em 0;
                -webkit-transition: opacity 0.3s ease-in-out;
                -moz-transition: opacity 0.3s ease-in-out;
                -o-transition: opacity 0.3s ease-in-out;
                -ms-transition: opacity 0.3s ease-in-out;
                transition: opacity 0.3s ease-in-out;

                @include lg{
                    padding: 0 0 2em 0;
                }
            }
        }
    }  
}
