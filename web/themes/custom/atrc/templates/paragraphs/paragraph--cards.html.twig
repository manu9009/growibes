{#
/**
* @file
* Default theme implementation to display a paragraph.
*
* Available variables:
* - paragraph: Full paragraph entity.
*   Only method names starting with "get", "has", or "is" and a few common
*   methods such as "id", "label", and "bundle" are available. For example:
*   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
*   - paragraph.id(): The paragraph ID.
*   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
*   - paragraph.getOwnerId(): The user ID of the paragraph author.
*   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
*   and methods for the paragraph object.
* - content: All paragraph items. Use {{ content }} to print them all,
*   or print a subset such as {{ content.field_example }}. Use
*   {{ content|without('field_example') }} to temporarily suppress the printing
*   of a given child element.
* - attributes: HTML attributes for the containing element.
*   The attributes.class element may contain one or more of the following
*   classes:
*   - paragraphs: The current template type (also known as a "theming hook").
*   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
*     "Image" it would result in "paragraphs--type--image". Note that the machine
*     name will often be in a short form of the human readable label.
*   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
*     preview would result in: "paragraphs--view-mode--preview", and
*     default: "paragraphs--view-mode--default".
* - view_mode: View mode; for example, "preview" or "full".
* - logged_in: Flag for authenticated user status. Will be true when the
*   current user is a logged-in member.
* - is_admin: Flag for admin user status. Will be true when the current user
*   is an administrator.
*
* @see template_preprocess_paragraph()
*
* @ingroup themeable
*/
#}
{%
set classes = [
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
not paragraph.isPublished() ? 'paragraph--unpublished',
'section communityHome bg-purple'
]
%}
{% block paragraph %}
  {% if 'On' in content.field_background[0] %}
    <section{{ attributes.addClass(classes) }} data-scroll-section>
      {% block content %}
      {% if 'On' not in content.field_background[0] %}
        {% set backgorunOn = 'manu' %}
      {% endif %}
        <div class="container">
          <div class="row justify-content-between align-items-start">
            {% if content.field_title|render|striptags|trim %}
              <div class="col-lg-12 view-header">
                <div class="section-details g-padding-y2 d-flex flex-wrap">
                  <div class="col-12 col-md-6 p-0">
                    <div class="section_title" data-scroll="" data-scroll-speed="-1">

                      {% if language.getId() == 'ar' or language == 'ar' %}
                        <span class="h2 fw-bold title fc-white text-a scroll" data-scroll>
                          {{ content.field_title|render|striptags|trim }}
                        </span>
                      {% else %}
                        <span data-splitting class="h2 fw-bold title fc-white text-a scroll"  data-scroll>
                          {{ content.field_title|render|striptags|trim }}
                        </span>
                      {% endif %}

                    </div>
                  </div>
                </div>
              </div>
            {% endif %}
            <div class="col-12">
              <div class="contentBlockWrap justify-content-sm-center p-white g-padding-b2 row mx-0" data-scroll="">
                {% for key, item in content.field_card if key|first != '#' %}
                  <div class="col-lg-4 col-md-6 py-3" data-scroll data-scroll-speed="1">{{ item }}</div>
                {% endfor %}
              </div>
            </div>
          </div>
          <div class="graphic speed-block" data-scroll="" data-scroll-speed="-1" data-scroll-position="top">
            <figure class="mb-0 image" data-scroll="">
                <img data-src="{{ base_url }}/{{ directory }}/images/dotted_circle_white.svg" src="{{ base_url }}/{{ directory }}/images/dotted_circle_white.svg" alt="ATRC" class="w-100 lazyloaded">
            </figure>
          </div>
        </div>
      {% endblock %}
    </section>
  {% else %}
        {% block content_without_background %}
          <div class="container">
            <div class="organizational border-bottom">
              <div class="row">
                <div class="col-lg-9">
                  <div class="text-content  g-padding-y  mb-3 mb-lg-3">
                    {% if 'On' in content.field_title_switch[0] %}
                       <span class="title h2 fw-bold d-flex mb-3">
                          {{ content.field_title|render|striptags|trim }}
                        </span>
                        <small class="d-block h5 fc-gray fw-bold name mb-2">{{ content.field_leadtext.0|default('Our key objectives') }}</small>
                    {% else %}
                       <small class="d-block h5 fc-gray fw-bold name mb-2">{{ content.field_leadtext.0|default('Our key objectives') }}</small>
                      <span class="title h2 fw-bold">
                         {{ content.field_title|render|striptags|trim }}
                      </span>
                    {% endif %}

                  </div>
                </div>
                <div class="col-md-12">
                  <div class="contentBlockWrap justify-content-sm-center g-padding-b mb-lg-3 gray  row ">
                     {% for key, item in content.field_card if key|first != '#' %}
                        <div class="col-lg-4 col-md-6 py-3" data-scroll data-scroll-speed="1">{{ item }}</div>
                     {% endfor %}
                  </div>
                </div>
              </div>
            </div>
          </div>
      {% endblock %}
  {% endif %}
{% endblock paragraph %}
